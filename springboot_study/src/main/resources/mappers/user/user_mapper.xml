<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.korit.springboot_study.mapper.UserMapper">

    <resultMap id="userResultMap" type="com.korit.springboot_study.entity.User">
        <id property="userId" column="user_id" />
        <result property="username" column="username" />
        <result property="password" column="password" />
        <result property="name" column="name" />
        <result property="email" column="email" />
        <collection property="userRoles" resultMap="userRoleResultMap" />
    </resultMap>

    <resultMap id="userRoleResultMap" type="com.korit.springboot_study.entity.UserRole">
        <id property="userId" column="user_id" />
        <result property="userId" column="user_id" />
        <result property="roleId" column="role_id" />
        <association property="role" resultMap="roleResultMap" />
    </resultMap>

    <resultMap id="roleResultMap" type="com.korit.springboot_study.entity.Role">
        <id property="roleId" column="role_id" />
        <result property="roleName" column="role_name" />
    </resultMap>


    <insert id="insert" keyProperty="userId" useGeneratedKeys="true" >
        insert into user_tb
        values(default, #{username}, #{password}, #{name}, #{email})
    </insert>

    <update id="updateUserById">
        update user_tb
        set
            email = #{email}
        where
            user_id = #{userId}
    </update>

    <delete id="deleteById">
        delete
        from
            user_tb
        where
            user_id = #{userId}
    </delete>

    <select id="selectByUsername" resultMap="userResultMap">
        select
            user_id,
            username,
            password,
            name,
            email
        from
            user_tb
        where
            username = #{username}
    </select>

    <!--ReqModifyUserDto. 회원정보 수정-->
    <select id="selectById" resultMap="userResultMap">
        select
            ut.user_id,
            ut.username,
            ut.password,
            ut.name,
            ut.email,

            <!--1명의 유저가 여러 권한이 있음-->
            urt.user_role_id,
            urt.user_id,
            urt.role_id,

            rt.role_id,
            rt.role_name
        from
            user_tb ut <!--중간 테이블, master, on에 기준2개를 봐야 어디에 붙이는지 알 수 있음-->
            left outer join user_role_tb urt on(urt.user_id = ut.user_id)
            <!--user에 user_role을 1:n 관계로 삽입(user_role의 큰 개념의 한 부분이 user, 하나의 사용자에 여러 개의 역할)-->
            left outer join role_tb rt on(rt.role_id = urt.role_id)
            <!--user_role에 role을 n:1 관계로 삽입(user_role의 큰 개념의 한 부분이 role, 여러 개의 사용자 역할이 하나의 역할을 참조)-->
        where
            ut.user_id = #{userId}
    </select>

    <select id="selectByRoleId" resultType="com.korit.springboot_study.entity.User">
        select
            ut.user_id,
            ut.username,

            urt.user_role_id,
            urt.user_id,
            urt.role_id,

        from
            user_tb
            left outer join user_role_tb urt on(urt.user_id = ut.user_id)
        where
            urt.role_id = #{roleId}
    </select>

</mapper>